// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/99designs/gqlgen/graphql"
)

type Article struct {
	Title       string  `json:"title"`
	TitleCard   string  `json:"titleCard"`
	Author      *Author `json:"author"`
	ContentData string  `json:"contentData"`
	DateWritten string  `json:"dateWritten"`
	URL         string  `json:"url"`
	Description string  `json:"description"`
	UUID        string  `json:"uuid"`
	Tags        []Tag   `json:"tags"`
}

type ArticleTag struct {
	Keyword string `json:"keyword"`
}

type ArticleTagInput struct {
	Keyword string `json:"keyword"`
}

type Articles struct {
	Article []Article `json:"article"`
	Total   int       `json:"total"`
}

type ArticlesPrivate struct {
	Jwt         string `json:"jwt"`
	ProjectUUID string `json:"project_uuid"`
	Username    string `json:"username"`
	Password    string `json:"password"`
}

type Author struct {
	Name    string `json:"name"`
	Profile string `json:"profile"`
	Picture string `json:"picture"`
}

type AuthorInput struct {
	Name string `json:"name"`
}

type CreateArticleInfo struct {
	Title       *string   `json:"title"`
	TitleCard   *File     `json:"titleCard"`
	Author      *string   `json:"author"`
	ContentData *string   `json:"contentData"`
	DateWritten *string   `json:"dateWritten"`
	URL         *string   `json:"url"`
	Description *string   `json:"description"`
	UUID        *string   `json:"uuid"`
	Tags        []TagData `json:"tags"`
	Jwt         string    `json:"jwt"`
	ProjectUUID string    `json:"project_uuid"`
	Username    string    `json:"username"`
	Password    string    `json:"password"`
}

type CreateProjectInput struct {
	UUID        string `json:"uuid"`
	Name        string `json:"name"`
	Jwt         string `json:"jwt"`
	Username    string `json:"username"`
	Role        string `json:"role"`
	Password    string `json:"password"`
	Author      string `json:"author"`
	Description string `json:"description"`
}

type DeleteAllArticlesInput struct {
	Jwt         string `json:"jwt"`
	ProjectUUID string `json:"project_uuid"`
	Username    string `json:"username"`
	Password    string `json:"password"`
}

type DeleteAllProjects struct {
	Username string `json:"username"`
	Jwt      string `json:"jwt"`
}

type DeleteBucketInfo struct {
	UUID        *string `json:"uuid"`
	Jwt         string  `json:"jwt"`
	ProjectUUID string  `json:"project_uuid"`
	Username    string  `json:"username"`
	Password    string  `json:"password"`
	Articlename string  `json:"articlename"`
}

type DeleteProjectType struct {
	Jwt      string `json:"jwt"`
	Username string `json:"username"`
	Project  string `json:"project"`
	UUID     string `json:"uuid"`
}

type File struct {
	Name        *string         `json:"name"`
	FileData    *graphql.Upload `json:"fileData"`
	ContentType *string         `json:"contentType"`
	Description *string         `json:"description"`
	URL         *string         `json:"url"`
}

type FindArticlePrivateType struct {
	Jwt      string `json:"jwt"`
	Project  string `json:"project"`
	Username string `json:"username"`
	Title    string `json:"title"`
}

type FindArticlePublicType struct {
	Project  string `json:"project"`
	Username string `json:"username"`
	Title    string `json:"title"`
}

type GalleryImages struct {
	Images []Image `json:"images"`
	Total  int     `json:"total"`
}

type GetProjectType struct {
	Jwt      string `json:"jwt"`
	Username string `json:"username"`
	Password string `json:"password"`
}

type GetZincArticleInput struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Project  string `json:"project"`
	Keyword  string `json:"keyword"`
}

type Image struct {
	UUID string `json:"uuid"`
	URL  string `json:"url"`
	Type string `json:"type"`
	Name string `json:"name"`
}

type Project struct {
	UUID        string    `json:"uuid"`
	Name        string    `json:"name"`
	Articles    *Articles `json:"articles"`
	Author      string    `json:"author"`
	Description string    `json:"description"`
}

type Projects struct {
	Projects []Project `json:"projects"`
}

type Tag struct {
	Language string `json:"language"`
}

type TagData struct {
	Name *string `json:"name"`
}

type UpdatedArticleInfo struct {
	Title       *string   `json:"title"`
	TitleCard   *File     `json:"titleCard"`
	Author      *string   `json:"author"`
	ContentData *string   `json:"contentData"`
	DateWritten *string   `json:"dateWritten"`
	URL         *string   `json:"url"`
	Description *string   `json:"description"`
	UUID        *string   `json:"uuid"`
	Tags        []TagData `json:"tags"`
	Jwt         string    `json:"jwt"`
	Username    string    `json:"username"`
	ProjectUUID string    `json:"project_uuid"`
	Password    string    `json:"password"`
}

type User struct {
	Email          string    `json:"email"`
	HashedPassword string    `json:"hashedPassword"`
	Role           string    `json:"role"`
	ProfilePicture string    `json:"profilePicture"`
	Bio            string    `json:"bio"`
	ProfileLInk    string    `json:"profileLInk"`
	Projects       *Projects `json:"projects"`
	Username       string    `json:"username"`
}

type UserCreation struct {
	UUID     string `json:"uuid"`
	Email    string `json:"email"`
	Password string `json:"password"`
	Jwt      string `json:"jwt"`
	Role     string `json:"role"`
	Username string `json:"username"`
}

type Jwt struct {
	Token string `json:"token"`
}
