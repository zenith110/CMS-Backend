// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/99designs/gqlgen/graphql"
)

type Article struct {
	Title       string  `json:"title"`
	TitleCard   string  `json:"titleCard"`
	Author      *Author `json:"author"`
	ContentData string  `json:"contentData"`
	DateWritten string  `json:"dateWritten"`
	URL         string  `json:"url"`
	Description string  `json:"description"`
	UUID        string  `json:"uuid"`
	Tags        []Tag   `json:"tags"`
}

type ArticleTag struct {
	Keyword string `json:"keyword"`
}

type ArticleTagInput struct {
	Keyword string `json:"keyword"`
}

type Articles struct {
	Article      []Article `json:"article"`
	Total        int       `json:"total"`
	ZincPassword string    `json:"zincPassword"`
}

type ArticlesPrivate struct {
	Jwt         string `json:"jwt"`
	ProjectUUID string `json:"project_uuid"`
}

type Author struct {
	Name     string `json:"name"`
	Profile  string `json:"profile"`
	Picture  string `json:"picture"`
	Username string `json:"username"`
}

type AuthorInput struct {
	Name string `json:"name"`
}

type CreateArticleInfo struct {
	Title       *string   `json:"title,omitempty"`
	TitleCard   *File     `json:"titleCard,omitempty"`
	ContentData *string   `json:"contentData,omitempty"`
	DateWritten *string   `json:"dateWritten,omitempty"`
	URL         *string   `json:"url,omitempty"`
	Description *string   `json:"description,omitempty"`
	UUID        *string   `json:"uuid,omitempty"`
	Tags        []TagData `json:"tags,omitempty"`
	Jwt         string    `json:"jwt"`
	ProjectUUID string    `json:"project_uuid"`
}

type CreateProjectInput struct {
	UUID        string `json:"uuid"`
	Name        string `json:"name"`
	Jwt         string `json:"jwt"`
	Role        string `json:"role"`
	Description string `json:"description"`
}

type DeleteAllArticlesInput struct {
	Jwt         string `json:"jwt"`
	ProjectUUID string `json:"project_uuid"`
}

type DeleteAllProjects struct {
	Jwt string `json:"jwt"`
}

type DeleteBucketInfo struct {
	UUID        *string `json:"uuid,omitempty"`
	Jwt         string  `json:"jwt"`
	ProjectUUID string  `json:"project_uuid"`
	Articlename string  `json:"articlename"`
	Username    string  `json:"username"`
}

type DeleteProjectType struct {
	Jwt     string `json:"jwt"`
	Project string `json:"project"`
	UUID    string `json:"uuid"`
}

type DeleteUser struct {
	UUID string `json:"uuid"`
	Jwt  string `json:"jwt"`
}

type EditUser struct {
	UUID       string `json:"uuid"`
	Email      string `json:"email"`
	Username   string `json:"username"`
	Password   string `json:"password"`
	Jwt        string `json:"jwt"`
	Role       string `json:"role"`
	Name       string `json:"name"`
	ProfilePic *File  `json:"profilePic"`
	Bio        string `json:"bio"`
}

type File struct {
	Name        *string         `json:"name,omitempty"`
	FileData    *graphql.Upload `json:"fileData,omitempty"`
	ContentType *string         `json:"contentType,omitempty"`
	Description *string         `json:"description,omitempty"`
	URL         *string         `json:"url,omitempty"`
}

type FindArticlePrivateType struct {
	Jwt         string `json:"jwt"`
	ProjectUUID string `json:"project_uuid"`
	UUID        string `json:"uuid"`
}

type FindArticlePublicType struct {
	ProjectUUID string `json:"project_uuid"`
	ArticleUUID string `json:"article_uuid"`
}

type GalleryImages struct {
	Images []Image `json:"images"`
	Total  int     `json:"total"`
}

type GetProjectType struct {
	Jwt string `json:"jwt"`
}

type GetZincArticleInput struct {
	ProjectUUID string `json:"project_uuid"`
	Keyword     string `json:"keyword"`
	Username    string `json:"username"`
	Password    string `json:"password"`
	PageNumber  string `json:"pageNumber"`
}

type Image struct {
	ProjectUUID string `json:"project_uuid"`
	URL         string `json:"url"`
	Type        string `json:"type"`
	Name        string `json:"name"`
	ArticleUUID string `json:"article_uuid"`
}

type LoginData struct {
	Jwt      string `json:"jwt"`
	Role     string `json:"role"`
	Username string `json:"username"`
}

type Project struct {
	UUID          string    `json:"uuid"`
	Name          string    `json:"name"`
	Articles      *Articles `json:"articles"`
	Author        string    `json:"author"`
	Description   string    `json:"description"`
	EncryptionKey string    `json:"encryptionKey"`
}

type Projects struct {
	Projects []Project `json:"projects"`
}

type Tag struct {
	Tag string `json:"tag"`
}

type TagData struct {
	Name *string `json:"name,omitempty"`
}

type UpdatedArticleInfo struct {
	Title              *string   `json:"title,omitempty"`
	TitleCard          *File     `json:"titleCard,omitempty"`
	Author             *string   `json:"author,omitempty"`
	ContentData        *string   `json:"contentData,omitempty"`
	DateWritten        *string   `json:"dateWritten,omitempty"`
	URL                *string   `json:"url,omitempty"`
	Description        *string   `json:"description,omitempty"`
	UUID               *string   `json:"uuid,omitempty"`
	Tags               []TagData `json:"tags,omitempty"`
	Jwt                string    `json:"jwt"`
	ProjectUUID        string    `json:"project_uuid"`
	Originalfoldername string    `json:"originalfoldername"`
}

type UploadArticleImageInput struct {
	File        *File  `json:"file"`
	ProjectUUID string `json:"project_uuid"`
	ArticleUUID string `json:"article_uuid"`
	ArticleName string `json:"article_name"`
}

type User struct {
	Email          string    `json:"email"`
	HashedPassword string    `json:"hashedPassword"`
	Role           string    `json:"role"`
	ProfilePicture string    `json:"profilePicture"`
	Bio            string    `json:"bio"`
	ProfileLink    string    `json:"profileLink"`
	Projects       *Projects `json:"projects"`
	Username       string    `json:"username"`
	UUID           string    `json:"uuid"`
	Name           string    `json:"name"`
}

type UserCreation struct {
	UUID       string `json:"uuid"`
	Email      string `json:"email"`
	Username   string `json:"username"`
	Password   string `json:"password"`
	Jwt        string `json:"jwt"`
	Role       string `json:"role"`
	Name       string `json:"name"`
	ProfilePic *File  `json:"profilePic,omitempty"`
	Bio        string `json:"bio"`
}

type Users struct {
	Users      []User `json:"users"`
	TotalCount int    `json:"totalCount"`
}

type ZincUser struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type Jwt struct {
	Token string `json:"token"`
}
