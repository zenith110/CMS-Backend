scalar Upload
schema {
  query: Query
  mutation: Mutation
}
type Query {
  articlePrivate(input: FindArticlePrivateType): Article
  articlesPrivate(input: ArticlesPrivate): Articles
  articlesPublic(input: GetZincArticleInput): Articles
  getGalleryImages(jwt: String!, username: String!): GalleryImages
  getProjects(input: GetProjectType): Projects
  articlePublic(input: FindArticlePublicType): Article
}
type Mutation {
  createArticle(
    input: CreateArticleInfo
  ): Article!
  updateArticle(input: UpdatedArticleInfo): Article!
  deleteArticle(input: DeleteBucketInfo): String!
  deleteAllArticles(input: DeleteAllArticlesInput): String!
  createProject(input: CreateProjectInput): Project!
  createUser(input: UserCreation): User
  loginUser(username: String!, password: String!): String!
  deleteProject(input: DeleteProjectType): String!
  deleteProjects(input: DeleteAllProjects): String!
}
input ArticlesPrivate{
  jwt: String!, 
  project_uuid: String!, 
  username: String!, 
  password: String!
}
input DeleteAllProjects{
  username: String!
  jwt: String!
}
input FindArticlePrivateType{
  jwt: String!
  project: String!
  username: String!
  title: String!
}
input FindArticlePublicType{
  project: String!
  username: String!
  title: String!
}
input DeleteProjectType{
  jwt: String!
  username: String!
  project: String!
  uuid: String!
}
input GetZincArticleInput{
  username: String!
  password: String!
  project: String!
  keyword: String!
}
input GetProjectType{
  jwt: String!
  username: String!
  password: String!
}
input UserCreation{
  uuid: String!
  email: String!
  password: String!
  jwt: String!
  role: String!
  username: String!
}
type User{
  email: String!
  hashedPassword: String!
  role: String!
  profilePicture: String!
  bio: String!
  profileLInk: String!
  projects: Projects!
  username: String!
}
input CreateProjectInput{
  uuid: String!
  name: String!
  jwt: String!
  username: String!
  role: String!
  password: String!
  author: String!
  description: String!
}
type jwt{
  token: String!
}
input DeleteAllArticlesInput{
  jwt: String!
  project_uuid: String!
  username: String!
  password: String!
}
input DeleteBucketInfo{
  uuid: String
  jwt: String!
  project_uuid: String!
  username: String!
  password: String!
}
input CreateArticleInfo{
    title: String
    titleCard: File
    author: String
    contentData: String
    dateWritten: String
    url: String
    description: String
    uuid: String
    tags: [TagData!]
    jwt: String!
    project_uuid: String!
    username: String!
    password: String!
}
input File{
  name: String
  fileData: Upload
  contentType: String
  description: String
  url: String
}
input TagData{
  name: String
}

input UpdatedArticleInfo{
    title: String
    titleCard: File
    author: String
    contentData: String
    dateWritten: String
    url: String
    description: String
    uuid: String
    tags: [TagData!]
    jwt: String!
    username: String!
    project: String!
    password: String!
}

type Image {
  uuid: String!
  url: String!
  type: String!
  name: String!
}


input AuthorInput {
  name: String!
}
type GalleryImages{
  images: [Image!]!
  total: Int!
}
type Author {
  name: String!
  profile: String!
  picture: String!
}
type Article {
  title: String!
  titleCard: String!
  author: Author!
  contentData: String!
  dateWritten: String!
  url: String!
  description: String!
  uuid: String!
  tags: [Tag!]!
}
type ArticleTag {
  keyword: String!
}
input ArticleTagInput {
  keyword: String!
}
type Articles {
  article: [Article!]!
  total: Int!
}
type Tag {
  language: String!
}
type Project{
  uuid: String!
  name: String!
  articles: Articles!
  author: String!
  description: String!
}
type Projects{
  projects: [Project!]!
}